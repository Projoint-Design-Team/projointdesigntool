  GNU nano 8.1                                                                                                                                                                           nginx.conf
# Define upstream servers for frontend and backend using Docker service names
upstream frontend_server {
    server frontend:3000;
}

upstream backend_server {
    server backend:8000;
}

# Redirect all HTTP traffic to HTTPS
#server {
#    if ($host = projoint.aaronrkaufman.com) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot


#    listen 80;
#    server_name projoint.aaronrkaufman.com;
#    return 301 https://$host$request_uri;


#}

# Main HTTPS server block
server {
    listen 443 ssl;
    server_name projoint.aaronrkaufman.com;

    # SSL Certificates
    ssl_certificate /etc/letsencrypt/live/projoint.aaronrkaufman.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/projoint.aaronrkaufman.com/privkey.pem; # managed by Certbot

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Additional SSL settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    client_max_body_size 100M;  # Increase if needed for larger file uploads

    # Frontend configuration (Next.js)
    location / {
        proxy_pass http://frontend_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Static files
    location /static/ {
        alias /home/app/web/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Media files
    location /media/ {
        alias /home/app/web/mediafiles/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Backend API configuration (Django)
    location /api/ {
        proxy_pass http://backend_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 70s;
        proxy_send_timeout 86400;
        proxy_read_timeout 86400;
        send_timeout 86400;
    }

}
